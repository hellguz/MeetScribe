# ./docker-compose.yml

services:
  redis:
    image: redis:alpine
    # Add persistence: ensures task queue survives restarts
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data

  backend:
    build: ./backend
    # The command is now in the Dockerfile's CMD and is executed by the
    # ENTRYPOINT script after migrations run.
    ports:
      - "4131:8000"
    volumes:
      - ./data:/app/data
      - ./backend:/app
    env_file: [.env]
    # The backend now only needs to wait for Redis. Migrations run on start.
    depends_on:
      - redis

  celeryworker:
    build: ./backend
    # The entrypoint.sh from the build will run migrations first, then this command.
    command: celery -A app.worker.celery_app worker -B -l info -c 1
    volumes:
      - whisper-cache:/root/.cache
      - ./data:/app/data
      - ./backend:/app
    env_file: [.env]
    # The worker now only needs to wait for Redis. Migrations run on start.
    depends_on:
      - redis
    # Add grace period: allows worker to finish its current task
    stop_grace_period: 1m

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL}
    ports:
      - "4132:80"
    env_file: [.env]
    depends_on: [backend]

volumes:
  whisper-cache: {}               # named volume persists model weights
  # Define the named volume for Redis data
  redis-data: {}
